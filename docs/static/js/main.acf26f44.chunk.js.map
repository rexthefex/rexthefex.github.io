{"version":3,"sources":["useLocalStorage.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","axios","defaults","baseURL","Timer","minutes","setItems","seconds","setSeconds","setItemsRef","useRef","current","useEffect","interval","setInterval","clearInterval","fetch","useCallback","a","get","then","r","newItems","length","splice","unshift","timestamp","dayjs","unix","data","map","el","symbol","volume","quoteVolume","lastPrice","Refresher","children","setMinutes","inputMinutes","setInputMinutes","className","onChange","event","parseInt","target","type","onClick","disabled","isNaN","App","items","hideLowVolume","setHideLowVolume","columns","useMemo","res","Header","accessor","sticky","forEach","idx","push","toString","format","availableCoinsInUSDT","filter","includes","endsWith","replace","filteredUSDTCoins","parseFloat","sort","b","filteredItems","coin","find","href","currentItem","dataItem","previousItem","ts","Math","round","toFixed","change","useTable","initialState","sortBy","id","desc","useSortBy","useSticky","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","checked","striped","bordered","hover","size","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","style","display","justifyContent","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acf26f44.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useLocalStorage = (key, initialValue) => {\n\t// State to store our value\n\t// Pass initial state function to useState so logic is only executed once\n\tconst [storedValue, setStoredValue] = useState(() => {\n\t\ttry {\n\t\t\t// Get from local storage by key\n\t\t\tconst item = window.localStorage.getItem(key);\n\t\t\t// Parse stored json or if none return initialValue\n\t\t\treturn item ? JSON.parse(item) : initialValue;\n\t\t} catch (error) {\n\t\t\t// If error also return initialValue\n\t\t\tconsole.log(error);\n\t\t\treturn initialValue;\n\t\t}\n\t});\n\n\t// Return a wrapped version of useState's setter function that ...\n\t// ... persists the new value to localStorage.\n\tconst setValue = value => {\n\t\ttry {\n\t\t\t// Allow value to be a function so we have same API as useState\n\t\t\tconst valueToStore =\n\t\t\t\tvalue instanceof Function ? value(storedValue) : value;\n\t\t\t// Save state\n\t\t\tsetStoredValue(valueToStore);\n\t\t\t// Save to local storage\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\n\t\t} catch (error) {\n\t\t\t// A more advanced implementation would handle the error case\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn [storedValue, setValue];\n};\n","import { useTable, useSortBy } from \"react-table\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport BTable from \"react-bootstrap/Table\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport dayjs from \"dayjs\";\nimport { useSticky } from \"react-table-sticky\";\nimport './App.css';\n\naxios.defaults.baseURL = \"https://api.binance.com\";\n\nconst Timer = ({minutes, setItems}) => {\n  const [seconds, setSeconds] = useState(minutes * 60);\n  const setItemsRef = useRef(setItems);\n  setItemsRef.current = setItems;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(current => current - 1)\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetch = useCallback(async () => {\n    // console.log('fetch')\n    // return true;\n    return axios.get(\"/api/v3/ticker/24hr\").then((r) =>\n      setItemsRef.current((current) => {\n        const newItems = [...current];\n        if (current.length > 10) {\n          newItems.splice(9, current.length - 9);\n        }\n        newItems.unshift({\n          timestamp: dayjs().unix(),\n          data: r.data.map((el) => ({\n            symbol: el.symbol,\n            volume: el.quoteVolume,\n            lastPrice: el.lastPrice,\n          })),\n        });\n        return newItems;\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      fetch().then(() => setSeconds(minutes * 60));\n    }\n  }, [fetch, minutes, seconds]);\n\n  useEffect(() => {\n    fetch().then(() => setSeconds(minutes * 60));\n  }, [fetch, minutes]);\n\n  return <div>{seconds}</div>;\n}\n\nconst Refresher = ({setItems, children}) => {\n  const [minutes, setMinutes] = useLocalStorage('interval', 1);\n  const [inputMinutes, setInputMinutes] = useState(1);\n\n  return <div className={'refresh-header'}>\n    <div>Minutes: <input value={inputMinutes}\n              onChange={event => setInputMinutes(parseInt(event.target.value))}\n              type={\"number\"}/>\n      <button onClick={() => setMinutes(inputMinutes)}\n              disabled={isNaN(inputMinutes)}>Save\n      </button>\n      {children}\n    </div>\n    <Timer minutes={minutes} setItems={setItems} />\n</div>\n}\n\nfunction App() {\n  const [items, setItems] = useLocalStorage(\"items\", []);\n  const [hideLowVolume, setHideLowVolume] = useLocalStorage('hide_low_volume', false);\n  const columns = useMemo(() => {\n    let res = [\n      { Header: \"Symbol\", accessor: \"symbol\", sticky: 'left' },\n    ];\n    items?.forEach((el, idx) => {\n      if (idx !== 0) {\n        res.push({\n          Header: 'CHG',\n          accessor: el.timestamp.toString() + 'CHG',\n        });\n        res.push({\n          Header: 'VOL',\n          accessor: el.timestamp.toString() + 'VOL',\n        });\n      }\n      res.push({\n        Header: el.timestamp\n          ? dayjs.unix(el.timestamp).format(\"HH:mm:ss\")\n          : null,\n        accessor: el.timestamp.toString(),\n      });\n    });\n    return res;\n  }, [items]);\n\n  const availableCoinsInUSDT = useMemo(() => {\n    return items?.[items?.length - 1]?.data\n      .filter((el) => el.symbol.includes(\"USDT\"))\n      .filter(\n        (el) =>\n          !el.symbol.includes(\"BULL\") &&\n          !el.symbol.includes(\"BEAR\") &&\n          !el.symbol.includes(\"UP\") &&\n          !el.symbol.includes(\"DOWN\")\n      )\n      .filter((el) => el.symbol.endsWith(\"USDT\"))\n      .map((el) => ({\n        symbol: el.symbol.replace(\"USDT\", \"\"),\n        volume: el.volume,\n      }));\n  }, [items]);\n\n  const filteredUSDTCoins = useMemo(\n    () =>\n      availableCoinsInUSDT\n        ?.filter((el) => parseFloat(el.volume) > 100000)\n        .sort((a, b) => parseFloat(b.volume) - parseFloat(a.volume)),\n    [availableCoinsInUSDT]\n  );\n\n  const filteredItems = useMemo(() => {\n    const data = items?.[items.length - 1]?.data;\n    return data?.filter(\n      (el) => {\n        const coin = filteredUSDTCoins.find((coin) => el.symbol.includes(coin.symbol));\n        return el.symbol.endsWith(\"BTC\") && !!coin && el.volume > (hideLowVolume ? 100 : 0); //btc\n      }\n    ) || [];\n  }, [filteredUSDTCoins, hideLowVolume, items]);\n\n  const data = useMemo(\n    () =>\n      filteredItems.map((el) => {\n        const symbol = el.symbol;\n        const data = { symbol: <a href={'https://www.binance.com/en/trade/' + el.symbol} target={'_blank'}>{el.symbol}</a> };\n        items.forEach((item, idx) => {\n          const currentItem = item.data.find(\n            (dataItem) => dataItem.symbol === symbol\n          );\n          const previousItem = items[idx-1]?.data.find(\n            (dataItem) => dataItem.symbol === symbol\n          )\n          const ts = item.timestamp.toString();\n          if (currentItem?.lastPrice.endsWith('000000')) {\n            data[ts] = currentItem?.lastPrice.replace('000000', '');\n          } else {\n            data[ts] = currentItem?.lastPrice.replace('00000000', '');\n          }\n          data[ts + 'VOL'] = ((Math.round(previousItem?.volume /\n            currentItem?.volume * 1000) / 10) - 100).toFixed(1) + '%';\n          const change = (Math.round(previousItem?.lastPrice /\n            currentItem?.lastPrice * 1000) / 10) - 100;\n          if (change !== 0.0) {\n            data[ts + 'CHG'] = change.toFixed(1) + '%';\n          }\n        });\n        return data;\n      }) || [],\n    [filteredItems, items]\n  );\n\n  // console.log({ columns, data, filteredUSDTCoins, filteredItems, items });\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: [\n          {\n            id: 'Symbol',\n            desc: false,\n          }\n        ]\n      }\n\n    },\n    useSortBy,\n    useSticky\n  );\n\n  return (\n    <>\n      <Refresher setItems={setItems}>\n        <label className=\"low-volume-checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={hideLowVolume}\n            onChange={() => setHideLowVolume(!hideLowVolume)}\n          />\n          Hide low volume\n        </label>\n      </Refresher>\n    <BTable striped bordered hover size=\"sm\" {...getTableProps()} className={\"table sticky\"}>\n      <thead className={\"header\"}>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\"}}>\n                  <div >\n                    {column.render(\"Header\")}\n                    {column.isSorted ? (column.isSortedDesc ? \"🔽\" : \"🔼\") : \"\"}\n                  </div>\n                  {!isNaN(column.id) && <a href='#' onClick={() =>\n                    setItems(current => {\n                      const idx = current.find(\n                        el => el.timestamp === +column.id);\n                      if (idx !== -1) {\n                        const newItems = [...current];\n                        newItems.splice(idx, 1);\n                        return newItems;\n                      }\n                    })}>X\n                  </a>}\n                </div>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell, idx) => (\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </BTable>\n    </>\n\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}